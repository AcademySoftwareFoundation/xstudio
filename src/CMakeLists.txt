
include("${CMAKE_CURRENT_SOURCE_DIR}/../cmake/macros.cmake")

if(INSTALL_PYTHON_MODULE OR BUILD_DOCS)
	add_src_and_test_always(python_module)
endif ()

add_src_and_test(audio)
add_src_and_test(bookmark)
add_src_and_test(caf_utility)
add_src_and_test(colour_pipeline)
add_src_and_test(conform)
add_src_and_test(contact_sheet)
add_src_and_test(data_source)
add_src_and_test(embedded_python)
add_src_and_test(global)
add_src_and_test(http_client)
add_src_and_test(launch/xstudio)
add_src_and_test(history)
add_src_and_test(media_cache)
add_src_and_test(media_hook)
add_src_and_test(media_metadata)
add_src_and_test(media_reader)
add_src_and_test(module)
add_src_and_test(playhead)
add_src_and_test(playlist)
add_src_and_test(plugin/colour_pipeline)
add_src_and_test(plugin/colour_op)
add_src_and_test(plugin/conform)
add_subdirectory(plugin/data_source)
add_src_and_test(plugin/hud)
add_src_and_test(plugin/media_hook)
add_src_and_test(plugin/media_metadata)
add_src_and_test(plugin/media_reader)
add_src_and_test(plugin/utility)
add_src_and_test(plugin/viewport_overlay)
add_src_and_test(plugin_manager)
add_src_and_test(plugin/viewport_layout)
add_subdirectory(plugin/python_plugins)
add_src_and_test(scanner)
add_src_and_test(session)
add_src_and_test(shotgun_client)
add_src_and_test(studio)
add_src_and_test(subset)
add_src_and_test(thumbnail)
add_src_and_test(ui)

if(BUILD_GLX_DEMO)
	add_src_and_test(demos/glx_minimal_demo) # WIP bare bones, no QT player window
endif(BUILD_GLX_DEMO)

if(BUILD_GRADING_DEMO)
	add_src_and_test(demos/colour_op_plugins/source_grading_demo)
endif(BUILD_GRADING_DEMO)

if(INSTALL_XSTUDIO)
	add_custom_target(
		preferences-copy ALL DEPENDS
	  ${PREFERENCE_FILES}
	)
endif ()

# always build as needed by python module.
add_src_and_test_always(global_store)
add_src_and_test_always(json_store)
add_src_and_test_always(timeline)
add_src_and_test_always(utility)
add_src_and_test_always(media)

if (BUILD_MINIMAL_DEMO)
	add_src_and_test_always(demos/minimal_demo)
endif ()

if (BUILD_PYSIDE_WIDGETS)
	find_package(Shiboken6 QUIET)
	find_package(PySide6 QUIET)

	if (INSTALL_PYTHON_MODULE AND Shiboken6_FOUND AND PySide6_FOUND)
		message("PySide6 and Shiboken6 packages found. Adding PySide6 demo to targets!")
		add_src_and_test_always(pyside6_module)
		add_src_and_test_always(demos/pyside_demo)
	else()
		message("PySide6 and Shiboken6 packages NOT found. PySide6 demo will not be built.")
	endif ()
endif ()
