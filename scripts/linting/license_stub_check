#! /usr/bin/env python

import re
import sys
import os
from pathlib import Path
import argparse

class ColorPrint:

    @staticmethod
    def print_fail(message, end='\n'):
        sys.stderr.write('\x1b[1;31m' + message + '\x1b[0m' + end)

    @staticmethod
    def print_pass(message, end='\n'):
        sys.stdout.write('\x1b[1;32m' + message + '\x1b[0m' + end)

    @staticmethod
    def print_warn(message, end='\n'):
        sys.stderr.write('\x1b[1;33m' + message + '\x1b[0m' + end)

    @staticmethod
    def print_info(message, end='\n'):
        sys.stdout.write('\x1b[1;34m' + message + '\x1b[0m' + end)

    @staticmethod
    def print_bold(message, end='\n'):
        sys.stdout.write('\x1b[1;37m' + message + '\x1b[0m' + end)

def check_for_license_stub(filepath):

    with open(filepath) as f:

        data = f.readline()
        if 'SPDX-License-Identifier: Apache-2.0' not in data:
            data = f.readline()
        if 'SPDX-License-Identifier: Apache-2.0' not in data:
            data = f.readline()
        if 'SPDX-License-Identifier: Apache-2.0' not in data:
            data = f.readline()
        if 'SPDX-License-Identifier: Apache-2.0' not in data:
            ColorPrint.print_warn("Filepath has no licence stub: {0}".format(filepath))

if __name__=="__main__":

    dirs = ['./src/', './include/', './python/', './ui/']
    ignore_exts = ['.cpp', '.hpp', '.qml', '.py']

    for d in dirs:
        for filepath in Path(d).rglob('*.*'):
            if not True in [str(filepath).find(b) != -1 for b in ignore_exts]:
                continue
            if filepath.is_dir():
                continue
            try:
                check_for_license_stub(filepath)
            except Exception as e:
                ColorPrint.print_warn("{0} : {1}".format(filepath, e))